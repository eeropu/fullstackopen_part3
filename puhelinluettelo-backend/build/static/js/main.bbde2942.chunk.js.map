{"version":3,"sources":["services/phonebookAPI.js","App.js","index.js"],"names":["baseURL","axios","get","newObject","post","id","delete","updatedObject","put","Message","content","error","useState","show","setShow","useEffect","setTimeout","style","display","color","border","borderRadius","padding","fontSize","fontWeight","backgroundColor","Search","search","setSearch","type","value","onChange","e","target","AddPerson","addPerson","newName","setNewName","newNumber","setNewNumber","onSubmit","Person","person","removePerson","name","number","onClick","App","persons","setPersons","message","setMessage","isError","setIsError","phonebookAPI","then","response","data","catch","console","log","window","confirm","filter","p","status","preventDefault","addable","temp","find","map","concat","toLowerCase","includes","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbde2942.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseURL = 'http://localhost:3001/api/persons'\n\nconst getAll = () => axios.get(baseURL)\nconst create = (newObject) => axios.post(baseURL, newObject)\nconst remove = (id) => axios.delete(`${baseURL}/${id}`)\nconst update = (id, updatedObject) => axios.put(`${baseURL}/${id}`, updatedObject)\n\nexport default {\n    getAll,\n    create,\n    remove,\n    update\n}","import React, { useEffect, useState } from 'react'\nimport phonebookAPI from './services/phonebookAPI'\nconst App = () => {\n  const [ search, setSearch ] = useState('')\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ message, setMessage ] = useState('')\n  const [ isError, setIsError ] = useState(false)\n\n\n  useEffect(() => {\n    phonebookAPI.getAll().then(response => setPersons(response.data)).catch(error => console.log(error))\n  }, [])\n\n  const addPerson = (e) => {\n    e.preventDefault()\n    const addable = {\n      name: newName,\n      number: newNumber\n    }\n\n    const temp = persons.find(person => person.name === newName)\n\n    if (temp && window.confirm(`${newName} is already added to phonebook, do you want to update phone number?`)) {\n      phonebookAPI.update(temp.id, addable).then(response => {\n        setPersons(persons.map(p => p.id !== temp.id ? p : response.data))\n        setMessage(`${addable.name} updated`)\n        setIsError(false)\n      }).catch(error => {\n        console.log(error)\n        setIsError(true)\n        if (error.response.status === 404) {\n          setMessage(`Person ${temp.name} has already been removed`)\n        } else {\n          setMessage('Something went wrong when updating person')\n        }\n        \n      })\n    } else {\n      phonebookAPI.create(addable).then(response => {\n        setPersons(persons.concat(response.data))\n        setMessage(`${addable.name} added`)\n        setIsError(false)\n      }).catch(error => {\n        setMessage('Something went wrong when adding new person')\n        setIsError(true)\n      })\n    }\n\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const removePerson = (person) => {\n    if (window.confirm(`Are you sure you want to remove user: ${person.name}?`)){\n      phonebookAPI.remove(person.id).then(() => {\n        setPersons(persons.filter(p => p.id !== person.id))\n        setMessage(`${person.name} deleted`)\n        setIsError(false)\n      }).catch(error => {\n        if(error.response.status === 404) {\n          setMessage(`Person ${person.name} has already been removed`)\n          setPersons(persons.filter(p => p.id !== person.id))\n        } else {\n          setMessage('Something went wrong when removing person')\n        }\n        setIsError(true)\n      })\n    }\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Message content={message} error={isError}/>\n      <Search search={search} setSearch={setSearch} />\n      <AddPerson \n        addPerson={addPerson}\n        newName={newName}\n        setNewName={setNewName}\n        newNumber={newNumber}\n        setNewNumber={setNewNumber}\n      />\n      <h2>Numbers</h2>\n      { persons.filter(person => person.name.toLowerCase().includes(search.toLowerCase()))\n        .map(person => <Person key={person.name} person={person} removePerson={removePerson}></Person>) }\n    </div>\n  )\n}\n\nconst Message = ({ content, error }) => {\n  const [ show, setShow ] = useState(false)\n\n  useEffect(() => {\n    if (content) {\n      setShow(true)\n      setTimeout(() => {\n        setShow(false)\n      }, 5000)\n    }\n  }, [content])\n\n  const style = {\n    display: show ? 'block' : 'none',\n    color: error ? 'red' : 'green',\n    border: error ? '2px solid red' : '2px solid green',\n    borderRadius: '5px',\n    padding: '5px',\n    fontSize: 'large',\n    fontWeight: 'bold',\n    backgroundColor: 'lightgray'\n}\n\n  return <p style={style}>{ content }</p>\n}\n\nconst Search = ({ search, setSearch }) => {\n  return (\n    <>\n      <h2>Search</h2>\n      Person name incudes <input type='text' value={search} onChange={e => setSearch(e.target.value)}/>\n    </>\n  )\n}\n\nconst AddPerson = ({ addPerson, newName, setNewName, newNumber, setNewNumber }) => (\n  <>\n    <h2>Add person</h2>\n    <form onSubmit={e => addPerson(e)}>\n      <div>\n        name: <input type='text' value={newName} onChange={e => setNewName(e.target.value)}/>\n      </div>\n      <div>\n        number: <input type='text' value={newNumber} onChange={e => setNewNumber(e.target.value)}/>\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  </>\n)\n\nconst Person = ({ person, removePerson }) => {\n  return (\n    <div>\n      {person.name} {person.number} <button onClick={() => removePerson(person)}>delete</button>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}